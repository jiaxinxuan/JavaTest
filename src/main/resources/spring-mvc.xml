<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-4.1.xsd
      http://www.springframework.org/schema/aop    
      http://www.springframework.org/schema/aop/spring-aop-4.2.xsd   
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">
  <!--开启扫描的功能，扫描所有的controller -->
  <context:component-scan base-package="com.velocity.*" />
  <!--开启spring的注解功能，让扫描到的controller,可以使用Spring注解，一般情况下配置scan以后就会默认开启此功能-->
  <context:annotation-config />
 	<!-- 实例化velocity和springMVC集成的bean -->
  <!--<bean id="velocityConfig"-->
      <!--class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">-->
      <!--<property name="resourceLoaderPath">-->
          <!--<value>/</value>-->
      <!--</property>-->
  <!--</bean>-->
  <mvc:annotation-driven /> 
	<mvc:resources location="/WEB-INF/js/" mapping="/js/**"/>
	<mvc:resources location="/WEB-INF/js/" mapping="/js/**"/>
	<mvc:resources location="/WEB-INF/api/" mapping="/api/**"/>
 <!-- 配置velocity视图解析器，与velocity集成 -->
  <!--<bean id="viewResolver"-->
      <!--class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">-->
      <!--<property name="cache" value="true" />&lt;!&ndash; 开启缓存 ，缓存已经解析过得视图&ndash;&gt;-->
      <!--<property name="prefix" value="/WEB-INF/" />&lt;!&ndash; 视图名前缀 &ndash;&gt;-->
      <!--<property name="layoutUrl" value="/WEB-INF/layouts/layout.vm" />-->
      <!--<property name="suffix" value=".vm" />&lt;!&ndash; 视图名后缀 &ndash;&gt;-->
  <!--</bean>-->
  <!-- 配置JSP的视图解析器 -->
  <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
       <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />  
       <property name="prefix" value="/WEB-INF/" />  
       <property name="suffix" value=".jsp" />  
   </bean>
    <!--cglib进行类代理-->
   <aop:aspectj-autoproxy proxy-target-class="true" />
    <!-- 国际化资源文件 -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <!-- 表示多语言配置文件在根路径下，以language开头的文件-->
        <property name="basename" value="classpath:language"/>
        <property name="useCodeAsDefaultMessage" value="true"/>
    </bean>
    <!-- 动态切换国际化 ,国际化放在session中 -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"></bean>
    <mvc:interceptors>
                <!-- 国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 -->
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
                   <!-- 通过这个参数来决定获取那个配置文件 -->
                    <property name="paramName" value="lang" />
        </bean>
    </mvc:interceptors>

</beans>